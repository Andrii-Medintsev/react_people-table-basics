{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonInfo.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","name","sex","slug","to","classNames","PersonInfo","born","died","fatherName","motherName","mother","father","useParams","PeopleTable","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","peopleFromServer","setPeopleFromServer","isLoading","setIsLoading","downloadError","setDownloadError","useEffect","res","catch","finally","initialPeople","visiblePeople","updatedPerson","personFather","find","p","personMother","length","HomePage","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f84a5dab.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonInfo: FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{mother ? <PersonLink person={mother} /> : motherName || '-'}</td>\n      <td>{father ? <PersonLink person={father} /> : fatherName || '-'}</td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonInfo } from './PersonInfo';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            person={person}\n            key={person.name}\n          />\n        ))}\n\n        {/* <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/philibert-haverbeke-1907\">\n              Philibert Haverbeke\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1907</td>\n          <td>1997</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/emma-de-milliano-1876\"\n            >\n              Emma de Milliano\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/emile-haverbeke-1877\">\n              Emile Haverbeke\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\" className=\"has-background-warning\">\n          <td>\n            <a href=\"#/people/jan-frans-van-brussel-1761\">\n              Jan Frans van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1761</td>\n          <td>1833</td>\n          <td>-</td>\n\n          <td>\n            <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n              Jacobus Bernardus van Brussel\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/lievijne-jans-1542\"\n            >\n              Lievijne Jans\n            </a>\n          </td>\n\n          <td>f</td>\n          <td>1542</td>\n          <td>1582</td>\n          <td>-</td>\n          <td>-</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/bernardus-de-causmaecker-1721\">\n              Bernardus de Causmaecker\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1721</td>\n          <td>1789</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/livina-haverbeke-1692\"\n            >\n              Livina Haverbeke\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/lieven-de-causmaecker-1696\">\n              Lieven de Causmaecker\n            </a>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [downloadError, setDownloadError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(res => setPeopleFromServer(res))\n      .catch(() => setDownloadError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = (initialPeople: Person[]) => {\n    const updatedPeople = initialPeople.map(person => {\n      const updatedPerson = { ...person };\n      const personFather\n        = initialPeople.find(p => updatedPerson.fatherName === p.name);\n      const personMother\n        = initialPeople.find(p => updatedPerson.motherName === p.name);\n\n      if (personFather) {\n        updatedPerson.father = personFather;\n      }\n\n      if (personMother) {\n        updatedPerson.mother = personMother;\n      }\n\n      return updatedPerson;\n    });\n\n    return updatedPeople;\n  };\n\n  const visiblePeople = peopleWithParents(peopleFromServer);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!isLoading && visiblePeople.length === 0 && !downloadError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {downloadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {\n            !isLoading\n            && !downloadError\n            && visiblePeople.length > 0\n            && <PeopleTable people={visiblePeople} />\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport type Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}